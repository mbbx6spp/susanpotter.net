<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>funtional programming on Susan Potter</title>
    <link>/tags/funtional-programming/</link>
    <description>Recent content in funtional programming on Susan Potter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/funtional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Profunctors: An exploration, Part 1</title>
      <link>/software/profunctors-an-exploration-part-1/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/software/profunctors-an-exploration-part-1/</guid>
      <description>Notes:    Originally adapted from a gist in 2018: https://gist.github.com/mbbx6spp/51bf2b694dc9bbf81b60f2f616453eb3    Moved the original Gist to a snippet.    Photo by Alex on Unsplash Goals   This series explores one kind of motivation and building blocks of Profunctors with an aim to introduce the concepts informally while introducing terminology along the way. Motivation   Profunctors are a remarkably practical abstraction for many activities that software developers are concerned with when building products.</description>
    </item>
    
    <item>
      <title>Parametricity: A Practitioners Guide</title>
      <link>/software/parametricity-a-practitioners-guide/</link>
      <pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/software/parametricity-a-practitioners-guide/</guid>
      <description>Introduction   What software developer likes surprises, especially in production? Not me. At least not when I am on call. ;)  Wouldn&amp;#39;t it be great if we were able to reason about our code to make our lives as simple as possible when debugging or eliminate debugging altogether?  The big idea of parametricity is that from parametric (or generic) &amp;#34;pure&amp;#34; functions we can determine interesting properties (and more of them) from the parametric (generic) types than the equivalent function fixed with specific types.</description>
    </item>
    
  </channel>
</rss>