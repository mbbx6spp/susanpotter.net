<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dhall on Susan Potter</title><link>/tags/dhall/</link><description>Recent content in dhall on Susan Potter</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 21 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/dhall/index.xml" rel="self" type="application/rss+xml"/><item><title>Dhall's merge keyword and union types</title><link>/snippets/dhalls-merge-keyword-and-union-types/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>/snippets/dhalls-merge-keyword-and-union-types/</guid><description>At work my team uses Dhall to generate configuration for services or environments and one thing we often need to do is define union types (also known as sum types).
Pattern matching in Haskell/PureScript background In Haskell and PureScript, we can use a feature of the language called pattern matching to be able to match a particular construction of a sum type value.
For instance, let us start off with a simple special case of a sum type, an enumeration type:</description></item></channel></rss>