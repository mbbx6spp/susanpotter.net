<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>idris on Susan Potter</title>
    <link>/tags/idris/</link>
    <description>Recent content in idris on Susan Potter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Sep 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/idris/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Put a Type On It: Idris Types as Propositions</title>
      <link>/talks/put-a-type-on-it-idris-types-as-propositions/</link>
      <pubDate>Wed, 21 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>/talks/put-a-type-on-it-idris-types-as-propositions/</guid>
      <description>Showing how Curry-Howard can be applied to structuring types to represent logical propositions.</description>
    </item>
    
    <item>
      <title>To Type or not to Static Type</title>
      <link>/software/to-type-or-not-to-static-type/</link>
      <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/software/to-type-or-not-to-static-type/</guid>
      <description>Originally published as a Gist here: https://gist.github.com/mbbx6spp/60577af8dc4106d6e710cd804292ce20
 Minor modifications in formatting and an extra line of no-judgement was added to this text from the original Gist.
Purpose, Disclaimer and Confessions   This is the (mostly) no nonesense guide to studies and research that measures and/or compares a variety of facets, characteristics, or manifestations of software development in dynamically vs statically typed programming languages.
 Disclaimer: For larger, more complex codebases, I do advocate for statically typed languages that also support algebraic data types, generic types, type classes, and preferrably a form of typelevel expressiveness (e.</description>
    </item>
    
  </channel>
</rss>